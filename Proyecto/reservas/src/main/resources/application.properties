# Datos de conexión a la base de datos MySQL
spring.datasource.url=jdbc:mysql://localhost:3306/reservasproyecto?createDatabaseIfNotExist=true
spring.datasource.username=root
spring.datasource.password=abc123.
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect
spring.jpa.hibernate.ddl-auto=update

# Puerto del microservicio reservas
server.port=8501

# Nombre con el que se registrará en Eureka
spring.application.name=reservas

# Configuración Swagger/OpenAPI (si usas springdoc)
springdoc.api-docs.path=/reservas

# Configuración Eureka Client
eureka.client.service-url.defaultZone=http://localhost:8099/eureka/
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true





#antes de introducir eureka-server

# Datos de conexiÃ³n a la base de datos MySQL
#spring.datasource.url=jdbc:mysql://localhost:3306/reservasproyecto?createDatabaseIfNotExist=true
#spring.datasource.username=root
#spring.datasource.password=abc123.
#spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect
#spring.jpa.hibernate.ddl-auto=update

# Puerto del microservicio reservas
#server.port=8501

# Nombre para registro en Eureka
#spring.application.name=reservas

# ConfiguraciÃ³n Swagger/OpenAPI (si usas springdoc)
#springdoc.api-docs.path=/reservas

# ConfiguraciÃ³n Eureka Client
#eureka.client.service-url.defaultZone=http://localhost:8500/eureka/
#eureka.client.register-with-eureka=true
#eureka.client.fetch-registry=true

